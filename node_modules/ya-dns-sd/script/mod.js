"use strict";
/**
 * Browsing and advertising of DNS-SD services over multicast DNS, with utilities for:
 *
 * - DNS-SD service browsing and advertising, compliant with [RFC 6763](https://www.rfc-editor.org/rfc/rfc6763)
 * - Multicast DNS continuous querying and respond, compliant with [RFC 6762](https://www.rfc-editor.org/rfc/rfc6762)
 * - Encoding and decoding of DNS messages as per [RFC 1035](https://www.rfc-editor.org/rfc/rfc1035)
 *
 * Supports different JS runtimes (e.g. Deno, Node) via multicast interface drivers.
 *
 * @author Sam Gwilym sam@gwil.garden
 * @module
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.browse = exports.advertise = exports.Query = exports.MulticastInterface = exports.encodeMessage = exports.decodeMessage = void 0;
// Encoding and decoding
var message_decode_js_1 = require("./src/decode/message_decode.js");
Object.defineProperty(exports, "decodeMessage", { enumerable: true, get: function () { return message_decode_js_1.decodeMessage; } });
var message_encode_js_1 = require("./src/decode/message_encode.js");
Object.defineProperty(exports, "encodeMessage", { enumerable: true, get: function () { return message_encode_js_1.encodeMessage; } });
// Multicast DNS
var multicast_interface_js_1 = require("./src/mdns/multicast_interface.js");
Object.defineProperty(exports, "MulticastInterface", { enumerable: true, get: function () { return multicast_interface_js_1.MulticastInterface; } });
var query_js_1 = require("./src/mdns/query.js");
Object.defineProperty(exports, "Query", { enumerable: true, get: function () { return query_js_1.Query; } });
// DNS-SD
var advertise_js_1 = require("./src/dns_sd/advertise.js");
Object.defineProperty(exports, "advertise", { enumerable: true, get: function () { return advertise_js_1.advertise; } });
var browse_js_1 = require("./src/dns_sd/browse.js");
Object.defineProperty(exports, "browse", { enumerable: true, get: function () { return browse_js_1.browse; } });
